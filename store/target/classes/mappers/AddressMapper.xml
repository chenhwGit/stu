<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="cn.tedu.store.mapper.AddressMapper">
	<resultMap id="AddressEntityMap"
		type="cn.tedu.store.entity.Address">
		<id column="aid" property="aid" />
		<result column="province_name" property="provinceName" />
		<result column="province_code" property="provinceCode" />
		<result column="city_name" property="cityName" />
		<result column="city_code" property="cityCode" />
		<result column="area_name" property="areaName" />
		<result column="area_Code" property="areaCode" />
		<result column="is_default" property="isDefault" />
		<result column="created_user" property="createdUser" />
		<result column="created_time" property="createdTime" />
		<result column="modified_user" property="modifiedUser" />
		<result column="modified_Time" property="modifiedTime" />
	</resultMap>


	<!--添加用户收货地址 -->
	<!--Integer insert(Address address); -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="aid">
		insert
		into t_address (
		uid,name,province_name,province_code,city_name,city_code,area_name,area_code,zip,
		address,phone,tel,tag,is_default,created_user,created_time,modified_user,modified_time
		)values(
		#{uid},#{name},#{provinceName},#{provinceCode},#{cityName},#{cityCode},#{areaName},#{areaCode},#{zip},
		#{address},#{phone},#{tel},#{tag},#{isDefault},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
		)
	</insert>


	<!--删除收货地址 -->
	<!-- Integer deleteByAid(Integer aid); -->
	<delete id="deleteByAid">
		delete from t_address where aid =#{aid}
	</delete>


	<!-- 根据用户id将地址全部设置为非默认 -->
	<!--Integer updateNonDefaultByUid(Integer uid); -->
	<update id="updateNonDefaultByUid">
		update t_address set is_default=0 where uid=#{uid}
	</update>

	<!-- 根据收货地址id设置默认 -->
	<!--Integer updateDefaultByAid(@Param("aid") Integer aid, @Param("modifiedUser") 
		String modifiedUser, @Param("modifiedTime") Date modifiedTime); -->
	<update id="updateDefaultByAid">
		update t_address set
		is_default=1,
		modified_user=#{modifiedUser},
		modified_time=#{modifiedTime} where
		aid=#{aid}
	</update>

	<!--统计收货地址数量 -->
	<!--Integer countByUid(Integer uid); -->
	<select id="countByUid" resultType="java.lang.Integer">
		select count(*) from
		t_address where uid =#{uid}
	</select>


	<!--根据用户id查找所有收货地址的数据 -->
	<!--List<Address> findByUid(Integer uid); -->
	<select id="findByUid" resultMap="AddressEntityMap">
		select * from t_address where
		uid=#{uid} order by is_default
		desc,modified_time desc
	</select>

	<!--根据收货地址id查找数据是否存在 -->
	<!--Address findByAid(Integer aid); -->
	<select id="findByAid" resultMap="AddressEntityMap">
		select * from t_address where
		aid=#{aid}
	</select>

	<!-- 查询某用户最近修改的收货地址 -->
	<!-- Address findLastModified(Integer uid); -->
	<select id="findLastModified" resultMap="AddressEntityMap">
		select * from t_address
		where uid=#{uid} order by modified_time desc limit 0,1
	</select>

</mapper>

